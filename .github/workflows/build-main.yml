name: build-main

on:
  push:
    branches: [ main ]

jobs:
  build-arm64:
    needs: build-amd64
    runs-on: ubuntu-20.04
    container:
      image: sirredbeard/snap-build

    steps:
      - uses: actions/checkout@v2

      - name: Download upstream epiphany snap
        run: snap download epiphany

      - name: Extract upstream epiphany snap
        run: |
          snapfile=$(ls | grep .snap)
          unsquashfs -d epiphanysnap $snapfile
          rm $snapfile
          
      - name: Extract upstream epiphany snapcraft.yaml to epiphany-snapcraft
        run: cp epiphanysnap/snap/snapcraft.yaml epiphany-snapcraft

      - name: Patch epiphany-snapcraft creating snapcraft.yaml
        run: |     
          # ARM64-specific changes
          sed -i '/      - gcc-multilib/d' epiphany-snapcraft
          sed -i '/      - g++-multilib/d' epiphany-snapcraft
          
          # Changes should match the amd64 changes below

          # Change name
          sed -i 's/name: epiphany/name: unofficial-webapp-office/g' epiphany-snapcraft
          
          # Change version
          sed -i "s/adopt-info: epiphany/version: '3.0'/g" epiphany-snapcraft
          
          # Change summary
          sed -i 's/summary: Web browser for GNOME/summary: unofficial-webapp-office based on GNOME Web/g' epiphany-snapcraft
          
          # Change passthrough title
          sed -i 's/  title: GNOME Web/  title: unofficial-webapp-office/g' epiphany-snapcraft
          
          # Disable dbus slots
          sed -i '/slots:/d' epiphany-snapcraft
          sed -i '/  # for GtkApplication registration/d' epiphany-snapcraft
          sed -i '/    interface: dbus/d' epiphany-snapcraft
          sed -i '/    bus: session/d' epiphany-snapcraft
          sed -i '/    name: org.gnome.Epiphany/d' epiphany-snapcraft
          
          # Rename epiphany parts
          sed -i 's/  epiphany:/  unofficial-webapp-office:/g' epiphany-snapcraft
          sed -i 's/      snap\/epiphany\/current\/usr: usr/      snap\/unofficial-webapp-office\/current\/usr: usr       /g' epiphany-snapcraft
          
          # Remove epiphany .desktop files in favor of our own in /gui/
          sed -i '/    desktop: usr\/share\/applications\/org.gnome.Epiphany.desktop/d' epiphany-snapcraft
          
          # Don't move generic epiphany .desktop and icons into place
          sed -i '/      cp/d' epiphany-snapcraft
          
          # Prune some help files that were symlinked outside of the snap
          echo "      - -usr/share/help/*" >> epiphany-snapcraft
          echo "      - -snap/epiphany/current/usr/share/help/*" >> epiphany-snapcraft
          
          # Remove random part left over, do line number until we figure out pattern matching with blank lines
          sed -i '21d' epiphany-snapcraft          
          
          # Don't create that folder, we don't need it
          grep -v '^      mkdir -p $SNAPCRAFT_PART_INSTALL/meta/gui/' epiphany-snapcraft >> snapcraft.yaml

      - name: Upload snapcraft_arm64.yaml
        uses: actions/upload-artifact@v2.2.1
        with:
          name: snapcraft_arm64.yaml
          path: snapcraft.yaml
          retention-days: 1

#      - name: Build snap on Launchpad using remote-build
#        env:
#          REMOTE_BUILD_CREDENTIALS: ${{ secrets.REMOTE_BUILD_CREDENTIALS }}
#        run: |        
#          mkdir -p $HOME/.local/share/snapcraft/provider/launchpad/
#          echo ${REMOTE_BUILD_CREDENTIALS} | base64 --decode --ignore-garbage > $HOME/.local/share/snapcraft/provider/launchpad/credentials
#          git config --global user.email "you@example.com"
#          git config --global user.name "Your Name"
#          snapcraft remote-build --launchpad-accept-public-upload --build-on=arm64
#        continue-on-error: true

#      - name: Upload build log
#        uses: actions/upload-artifact@v2.2.1
#        with:
#          name: unofficial-webapp-office_arm64.txt
#          path: unofficial-webapp-office_arm64.txt
#          retention-days: 1
      
#      - name: Push .snap to Snapcraft.io
#        env:
#          SNAPCRAFT_LOGIN_FILE: ${{ secrets.SNAPCRAFT_LOGIN_FILE }}
#        run: |
#          mkdir .snapcraft
#          echo ${SNAPCRAFT_LOGIN_FILE} | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg
#          snapcraft upload --release=edge *.snap

  build-amd64:
    runs-on: ubuntu-20.04
    container:
      image: sirredbeard/snap-build

    steps:
      - uses: actions/checkout@v2

      - name: Download upstream epiphany snap
        run: snap download epiphany

      - name: Extract upstream epiphany snap
        run: |
          snapfile=$(ls | grep .snap)
          unsquashfs -d epiphanysnap $snapfile
          rm $snapfile
          
      - name: Extract upstream epiphany snapcraft.yaml to epiphany-snapcraft
        run: cp epiphanysnap/snap/snapcraft.yaml epiphany-snapcraft

      - name: Patch epiphany-snapcraft creating snapcraft.yaml
        run: |
          # Change name
          sed -i 's/name: epiphany/name: unofficial-webapp-office/g' epiphany-snapcraft
          
          # Change version
          sed -i "s/adopt-info: epiphany/version: '3.0'/g" epiphany-snapcraft
          
          # Change summary
          sed -i 's/summary: Web browser for GNOME/summary: unofficial-webapp-office based on GNOME Web/g' epiphany-snapcraft
          
          # Change passthrough title
          sed -i 's/  title: GNOME Web/  title: unofficial-webapp-office/g' epiphany-snapcraft
          
          # Disable dbus slots
          sed -i '/slots:/d' epiphany-snapcraft
          sed -i '/  # for GtkApplication registration/d' epiphany-snapcraft
          sed -i '/    interface: dbus/d' epiphany-snapcraft
          sed -i '/    bus: session/d' epiphany-snapcraft
          sed -i '/    name: org.gnome.Epiphany/d' epiphany-snapcraft
          
          # Rename epiphany parts
          sed -i 's/  epiphany:/  unofficial-webapp-office:/g' epiphany-snapcraft
          sed -i 's/      snap\/epiphany\/current\/usr: usr/      snap\/unofficial-webapp-office\/current\/usr: usr       /g' epiphany-snapcraft
          
          # Remove epiphany .desktop files in favor of our own in /gui/
          sed -i '/    desktop: usr\/share\/applications\/org.gnome.Epiphany.desktop/d' epiphany-snapcraft
          
          # Don't move generic epiphany .desktop and icons into place
          sed -i '/      cp/d' epiphany-snapcraft
          
          # Prune some help files that were symlinked outside of the snap
          echo "      - -usr/share/help/*" >> epiphany-snapcraft
          echo "      - -snap/epiphany/current/usr/share/help/*" >> epiphany-snapcraft
          
          # Remove random part left over, do line number until we figure out pattern matching with blank lines
          sed -i '21d' epiphany-snapcraft          
          
          # Don't create that folder, we don't need it
          grep -v '^      mkdir -p $SNAPCRAFT_PART_INSTALL/meta/gui/' epiphany-snapcraft >> snapcraft.yaml        

      - name: Upload snapcraft_amd64.yaml
        uses: actions/upload-artifact@v2.2.1
        with:
          name: snapcraft_amd64.yaml
          path: snapcraft.yaml
          retention-days: 1
          
#      - name: Build snap on Launchpad using remote-build
#        env:
#          REMOTE_BUILD_CREDENTIALS: ${{ secrets.REMOTE_BUILD_CREDENTIALS }}
#        run: |        
#          mkdir -p $HOME/.local/share/snapcraft/provider/launchpad/
#          echo ${REMOTE_BUILD_CREDENTIALS} | base64 --decode --ignore-garbage > $HOME/.local/share/snapcraft/provider/launchpad/credentials
#          git config --global user.email "you@example.com"
#          git config --global user.name "Your Name"
#          snapcraft remote-build --launchpad-accept-public-upload --build-on=amd64
#        continue-on-error: true

#      - name: Upload build log
#        uses: actions/upload-artifact@v2.2.1
#        with:
#          name: unofficial-webapp-office_amd64.txt
#          path: unofficial-webapp-office_amd64.txt
#          retention-days: 1

#      - name: Push .snap to Snapcraft.io
#        env:
#          SNAPCRAFT_LOGIN_FILE: ${{ secrets.SNAPCRAFT_LOGIN_FILE }}
#        run: |
#          mkdir .snapcraft
#          echo ${SNAPCRAFT_LOGIN_FILE} | base64 --decode --ignore-garbage > .snapcraft/snapcraft.cfg
#          snapcraft upload --release=edge *.snap
